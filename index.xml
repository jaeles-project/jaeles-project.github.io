<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Jaeles Scanner</title>
    <link>/</link>
    <description>Recent content in Home on Jaeles Scanner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 30 Jul 2019 22:50:41 +0700</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Request Properties</title>
      <link>/signatures/request-properties/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/request-properties/</guid>
      <description>Some core properties for draft a request.
Properties for building a request    Property Description Default Value     method Request Method This field is required in single or list signature   url URL for sending request This field is required in single or list signature   headers Headers of the request default is blank   body Body of the request default is blank   engine Client to send a request default is blank.</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>/signatures/variables/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/variables/</guid>
      <description>This part will be executed first to generate for your signature list of input.
Default variables generated from input    Default variable E.g: http://example.com:8080/a/b/c.php?q=123     {{.URL}} http://example.com:8080/a/b/c?q=123   {{.BaseURL}} http://example.com:8080   {{.Host}} example.com:8080   {{.Domain}} example.com   {{.Port}} 8080   {{.Path}} /a/b/c   {{.Extension}} .php   {{.Raw}} http://example.com/a/b/c.php?q=123   {{.bar}} take from --params &#39;bar=111&#39; or -p &#39;bar=111   {{.</description>
    </item>
    
    <item>
      <title>Burp Integration</title>
      <link>/installation/burp-integration/</link>
      <pubDate>Wed, 31 Jul 2019 13:01:12 +0700</pubDate>
      
      <guid>/installation/burp-integration/</guid>
      <description>Plugin can be found here and Video Guide here
How to install Burp plugin Download the plugin on from this URL.
Run Jaeles as server mode by using this command jaeles server -v. First time you run jaeles server, it&amp;rsquo;s gonna create default credentials on ~/.jaeles/burp.json. (Delete ~/.jaeles/ folder and run it again if you have any issue)
Make sure you have Jython installed on Burp then load it. Burp -&amp;gt; Extender -&amp;gt; Add jaeles-burp.</description>
    </item>
    
    <item>
      <title>Detection</title>
      <link>/signatures/detection/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/detection/</guid>
      <description>This part will be executed right after Jaeles got response from the request and do a logic for determine the request is vulnerable or not.
Detections was written in Javascript so you can write whatever you want with some predefined function below as long as you return boolean value to determine it&amp;rsquo;s found something or not.
Examples Detection # Response Status code equal 200 and the response body contain a string &#39;google.</description>
    </item>
    
    <item>
      <title>Generator</title>
      <link>/signatures/generator/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/generator/</guid>
      <description>This part will be executed before parsing request input with the signature for generate variation request base on the original request. Generator only available in type: fuzz signature.
Generator    API Generator Description Example     Fuzz Gen request by replace template Fuzz(&amp;quot;{{.payload}}&amp;quot;, Fuzz(&amp;quot;{{.payload}}&amp;quot;, &amp;quot;{{.inject}}&amp;quot;)   Replace Gen request by replace words Replace(&amp;quot;{{.payload}}&amp;quot;)   Fuzz Gen request by replace words Fuzz(&amp;quot;PUT&amp;quot;) , Method()   Query Gen request based on Query String Query(&amp;quot;[[.</description>
    </item>
    
    <item>
      <title>Middleware</title>
      <link>/signatures/middleware/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/middleware/</guid>
      <description>This part will be executed right before request send to the target for doing some extra task before sending a request to target.
   API Detection Description Example     InvokeCmd Execute Command line and get result of it InvokeCmd(&amp;quot;phuip-fpizdam {{.URL}}&amp;quot;)   Host2IP Turn Host: domain.com header to Host: IP address Host2IP()    </description>
    </item>
    
    <item>
      <title>Passive Detection</title>
      <link>/signatures/passive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/signatures/passive/</guid>
      <description>LikeÂ Detection part but check for every request Enable passive detection via --passive or -G option.
 Default passive signatures can be found here
First time you run jaeles, it will installed passive to ~/.jaeles/passives.
Add new passive signature as single file in ~/.jaeles/passives folder or just add new rule to exist passive signature in rules section.
Sample passive signature Usage Jaeles look for passive signature in file and rules in single signatures.</description>
    </item>
    
    <item>
      <title>Conclusions &amp; Conditions</title>
      <link>/signatures/conclusions-and-conditions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/signatures/conclusions-and-conditions/</guid>
      <description>Sample signature used conclusions and conditions id: fuzz-01-02 info: name: Fuzz Injection variables: - xss: | sam foo requests: - method: GET values: - custom: &amp;quot;z1123zzz&amp;quot; url: &amp;gt;- {{.BaseURL}}/tests/sinks.html?name=[[.custom]]{{.xss}} detections: - StringSearch(&amp;quot;response&amp;quot;, &amp;quot;mysql_fetch_array&amp;quot;) conclusions: - SetValue(&amp;quot;code&amp;quot;, StatusCode()) - SetValue(&amp;quot;rt&amp;quot;, ResponseTime()) - conditions: - ValueOf(&amp;quot;code&amp;quot;) == &amp;quot;200&amp;quot; - parseInt(ValueOf(&amp;quot;code&amp;quot;)) &amp;gt; 200 - parseFloat(ValueOf(&amp;quot;rt&amp;quot;)) &amp;gt; 1 method: GET url: &amp;gt;- {{.BaseURL}}/tests/sinks.html?name=2222222222222 detections: - StringSearch(&amp;quot;response&amp;quot;, &amp;quot;mysql_fetch_array&amp;quot;)  Conditions If present, this part will be run before continue to generate request.</description>
    </item>
    
    <item>
      <title>Example Signatures</title>
      <link>/signatures/examples/</link>
      <pubDate>Wed, 31 Jul 2019 14:12:42 +0700</pubDate>
      
      <guid>/signatures/examples/</guid>
      <description> Take a look at this repo repo for more examples.
Implement CVE-2020-2096 Scan for log file and secret file Fuzz signature </description>
    </item>
    
    <item>
      <title>Persistent Burpcollaborator</title>
      <link>/installation/persistent-burpcollaborator/</link>
      <pubDate>Wed, 31 Jul 2019 13:02:57 +0700</pubDate>
      
      <guid>/installation/persistent-burpcollaborator/</guid>
      <description>Get Collaborator Secret token Route traffic through proxy
Burp -&amp;gt; Project Options -&amp;gt; Connections -&amp;gt; Upstream Proxy Server -&amp;gt; then run command below
mitmdump -q -p 8667 -s burpcollaborator-oob.py  Get burpcollaborator secret
Burp -&amp;gt; Project Options -&amp;gt; Connections -&amp;gt; Mics -&amp;gt; -&amp;gt; Burp Collaborator Server. Check on Poll over unencrypted HTTP.
Now open Collaborator Client and click Poll now.
Copy as many collab as need to be and store it in a file.</description>
    </item>
    
  </channel>
</rss>